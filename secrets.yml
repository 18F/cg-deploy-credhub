---
common:
  secrets_secrets_passphrase:
  ca_cert:
    ca:
    certificate:
    private_key:
  ca_public_key:
    public_key:
    private_key: (( grab common.ca_cert.private_key ))
  ca_public_key_name:
  smtp_host:
  smtp_port:
  smtp_user:
    username:
    password:
  docker_user:
    username:
    password:
  docker_email:
master-bosh:
  secrets_secrets_passphrase:
  masterbosh:
    admin_user:
      username:
      password:
    agent_user:
      username:
      password:
    director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    director_user:
      username:
      password:
    hm_user:
      username:
      password:
    mbus_password:
    nats_director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_hm_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_server_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    postgres_password:
    vcap_user:
      username: vcap
      password:
      password_hash:
  toolingbosh:
    admin_user:
      username:
      password:
    agent_user:
      username:
      password:
    director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    director_user:
      username:
      password:
    nats_director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_hm_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_user:
      username:
      password:
    nats_server_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nessus_agent_key: (( grab tooling-bosh.nessus-manager-prod.nessus_agent_key ))
    registry_user:
      username:
      password:
    tripwire_localpass:
    tripwire_sitepass:
    uaa_admin_client:
      username: admin
      password:
    uaa_bosh_exporter_client:
      username: bosh_exporter
      password:
    uaa_bosh_cli_client:
      username: bosh_cli
      password:
    uaa_ci_client:
      username: ci
      password:
    uaa_concourse_bosh_client:
      username: concourse_bosh
      password:
    uaa_concourse_production_client:
      username: concourse_production
      password:
    uaa_concourse_staging_client:
      username: concourse_staging
      password:
    uaa_hm_client:
      username: hm
      password:
    uaa_login_client:
      username: login
      password:
    uaa_monitoring_production_client:
      username: monitoring_production
      password:
    uaa_monitoring_staging_client:
      username: monitoring_staging
      password:
    uaa_platform_kibana_production_client:
      username: platform-kibana-production
      password:
    uaa_platform_kibana_staging_client:
      username: platform-kibana-staging
      password:
    uaa_platform_kibana_development_client:
      username: platform-kibana-development
      password:
    uaa_prometheus_production_client:
      username: prometheus-production
      password:
    uaa_prometheus_staging_client:
      username: prometheus-staging
      password:
    uaa_uaa_token_audit_client:
      username: uaa-token-audit
      password:
    uaa_saml_provider_metadata_gsa:
    uaa_saml_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_public_key:
      public_key:
      private_key: (( grab master-bosh.toolingbosh.uaa_web_cert.private_key ))
tooling-bosh:
  secrets_secrets_passphrase:
  developmentbosh:
    admin_user:
      username:
      password:
    agent_user:
      username:
      password:
    director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    director_user:
      username:
      password:
    nats_director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_hm_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_user:
      username:
      password:
    nats_server_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nessus_agent_key: (( grab tooling-bosh.nessus-manager-prod.nessus_agent_key ))
    registry_user:
      username:
      password:
    tripwire_localpass:
    tripwire_sitepass:
    uaa_admin_client:
      username: admin
      password:
    uaa_bosh_exporter_client:
      username: bosh_exporter
      password:
    uaa_bosh_cli_client:
      username: bosh_cli
      password:
    uaa_ci_client:
      username: ci
      password:
    uaa_hm_client:
      username: hm
      password:
    uaa_login_client:
      username: login
      password:
    uaa_saml_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_public_key:
      public_key:
      private_key: (( grab tooling-bosh.developmentbosh.uaa_web_cert.private_key ))
  stagingbosh:
    admin_user:
      username:
      password:
    agent_user:
      username:
      password:
    director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    director_user:
      username:
      password:
    nats_director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_hm_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_user:
      username:
      password:
    nats_server_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nessus_agent_key: (( grab tooling-bosh.nessus-manager-prod.nessus_agent_key ))
    registry_user:
      username:
      password:
    tripwire_localpass:
    tripwire_sitepass:
    uaa_admin_client:
      username: admin
      password:
    uaa_bosh_exporter_client:
      username: bosh_exporter
      password:
    uaa_bosh_cli_client:
      username: bosh_cli
      password:
    uaa_ci_client:
      username: ci
      password:
    uaa_hm_client:
      username: hm
      password:
    uaa_login_client:
      username: login
      password:
    uaa_saml_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_public_key:
      public_key:
      private_key: (( grab tooling-bosh.stagingbosh.uaa_web_cert.private_key ))
  productionbosh:
    admin_user:
      username:
      password:
    agent_user:
      username:
      password:
    director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    director_user:
      username:
      password:
    nats_director_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_hm_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nats_user:
      username:
      password:
    nats_server_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    nessus_agent_key: (( grab tooling-bosh.nessus-manager-prod.nessus_agent_key ))
    registry_user:
      username:
      password:
    tripwire_localpass:
    tripwire_sitepass:
    uaa_admin_client:
      username: admin
      password:
    uaa_bosh_exporter_client:
      username: bosh_exporter
      password:
    uaa_bosh_cli_client:
      username: bosh_cli
      password:
    uaa_ci_client:
      username: ci
      password:
    uaa_hm_client:
      username: hm
      password:
    uaa_login_client:
      username: login
      password:
    uaa_saml_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_cert:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_web_public_key:
      public_key:
      private_key: (( grab tooling-bosh.productionbosh.uaa_web_cert.private_key ))
  concourse-staging:
    web_atc_basic_auth_user:
      username:
      password:
    web_atc_generic_oauth_client: #should use absolute path in manifest
      username: (( grab master-bosh.toolingbosh.uaa_concourse_staging_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_staging_client.password ))
    web_atc_token_signing_key:
      public_key:
      private_key:
    web_tsa_authorized_key_ssh:
      public_key:
      private_key:
    web_tsa_host_key_ssh:
      public_key:
      private_key:
    web_tsa_host_key_ssh_fingerprint:
    web_tsa_token_signing_key_ssh:
      public_key:
      private_key:
    worker_tsa_worker_key_ssh:
      public_key:
      private_key:
    worker_tsa_worker_key_ssh_fingerprint:
    concourse_staging_deployment_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_ci_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_ci_client.password ))
  concourse-production:
    web_atc_generic_oauth_client: #should use absolute path in manifest
      username: (( grab master-bosh.toolingbosh.uaa_concourse_production_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_production_client.password ))
    web_atc_token_signing_key:
      public_key:
      private_key:
    web_tsa_authorized_key_ssh:
      public_key:
      private_key:
    web_tsa_host_key_ssh:
      public_key:
      private_key:
    web_tsa_host_key_ssh_fingerprint:
    web_tsa_token_signing_key_ssh:
      public_key:
      private_key:
    worker_tsa_worker_key_ssh:
      public_key:
      private_key:
    worker_tsa_worker_key_ssh_fingerprint:
    concourse_production_deployment_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_ci_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_ci_client.password ))
  pdns-staging:
    dnssec_key_zsk_sandbox_gov:
    dnssec_key_ksk_sandbox_gov:
    private_api_key:
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.password ))
  pdns-production:
    dnssec_key_zsk_sandbox_gov:
    dnssec_key_ksk_sandbox_gov:
    private_api_key:
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.password ))
  prometheus-staging:
    bosh_exporter_client: #should use absolute path in manifest
      username: (( grab tooling-bosh.stagingbosh.uaa_bosh_exporter_client.username ))
      password: (( grab tooling-bosh.stagingbosh.uaa_bosh_exporter_client.password ))
    bosh_ca_cert: (( grab common.ca_cert.certificate ))
    firehose_exporter_client:
      username: (( grab staging-bosh.cf-staging.firehose-exporter-client.username ))
      password: (( grab staging-bosh.cf-staging.firehose-exporter-client.password ))
    kubernetes_cluster:
    kubernetes_user:
      username: (( grab staging-bosh.kubernetes.master_apiserver_user.username ))
      password: (( grab staging-bosh.kubernetes.master_apiserver_user.password ))
    kubernetes_broker_exporter_user:
      username: (( grab staging-bosh.cf-staging.kubernetes_broker_exporter_user.username ))
      password: (( grab staging-bosh.cf-staging.kubernetes_broker_exporter_user.password ))
    grafana_admin_password:
    oauth_proxy_client:
      username: (( grab master-bosh.toolingbosh.uaa_prometheus_staging_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_prometheus_staging_client.password ))
    pagerduty_key:
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.password ))
  prometheus-production:
    bosh_exporter_client: #should use absolute path in manifest
      username: (( grab tooling-bosh.productionbosh.uaa_bosh_exporter_client.username ))
      password: (( grab tooling-bosh.productionbosh.uaa_bosh_exporter_client.password ))
    bosh_exporter_client_tooling:
      username: (( grab master-bosh.toolingbosh.uaa_bosh_exporter_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_bosh_exporter_client.password ))
    bosh_ca_cert: (( grab common.ca_cert.certificate ))
    firehose_exporter_client:
      username: (( grab production-bosh.cf-production.firehose-exporter-client.username ))
      password: (( grab production-bosh.cf-production.firehose-exporter-client.password ))
    kubernetes_cluster:
    kubernetes_user:
      username: (( grab production-bosh.kubernetes.master_apiserver_user.username ))
      password: (( grab production-bosh.kubernetes.master_apiserver_user.password ))
    kubernetes_broker_exporter_user:
      username: (( grab production-bosh.cf-production.kubernetes_broker_exporter_user.username ))
      password: (( grab production-bosh.cf-production.kubernetes_broker_exporter_user.password ))
    grafana_admin_password:
    oauth_proxy_client:
      username: (( grab master-bosh.toolingbosh.uaa_prometheus_production_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_prometheus_production_client.password ))
    pagerduty_key:
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.password ))
  nessus-manager-prod:
    nessus_agent_key:
    nessus_manager_user:
      username:
      password:
    nessus_manager_license:
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.username ))
      password: (( grab master-bosh.toolingbosh.uaa_concourse_bosh_client.password ))
development-bosh:
  secrets_secrets_passphrase:
  cf-development:
    adapter_rlp_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    adapter_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    admin-read-only-client-secret:
    admin-ui-client-secret:
    app_domain:
    app_package_directory_key:
    application_ca:
      ca:
      certificate:
      private_key:
    blobstore_admin_users_password:
    blobstore_secure_link_secret:
    blobstore_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    broker-deployer-password:
    buildpack-notifier-client-secret:
    buildpack_directory_key:
    cc_bridge_cc_uploader:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_cc_uploader_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_tps:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bulk_api_password:
    cc_database_password:
    cc_database_username:
    cc_db_encryption_key:
    cc_internal_api_password:
    cc_staging_upload_password:
    cc_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cdn-broker-client-secret:
    cf_admin_password:
    cf_bosh_password:
    cf_mysql_mysql_admin_password:
    cf_mysql_mysql_cluster_health_password:
    cf_mysql_mysql_galera_healthcheck_endpoint_password:
    cf_mysql_mysql_galera_healthcheck_password:
    cf_mysql_proxy_api_password:
    company-name:
    concourse-broker-client-secret:
    consul_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_agent_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_encrypt_key:
    consul_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    dashboard-client-secret:
    diego-dns-servers:
    diego_auctioneer_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_auctioneer_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_active_key_label:
    diego_bbs_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_encryption_keys_passphrase:
    diego_bbs_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_database_password:
    diego_instance_identity_ca:
      ca:
      certificate:
      private_key:
    diego_locket_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_locket_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent_v2:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_ssh_proxy_host_key:
      private_key:
      public_key_fingerprint:
    droplet_directory_key:
    dropsonde_shared_secret:
    environment:
    etcd_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_client:
      ca: nil
    etcd_peer:
      ca: nil
    etcd_peer_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_server:
      ca: nil
    firehose-exporter-client-secret:
    kibana-client-secret:
    kubernetes-client-secret:
    locket_database_password:
    loggregator_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_cc_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_doppler:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_metron:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_rlp:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_statsdinjector:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_syslogdrainbinder:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    logsearch-firehose-ingestor-client-secret:
    nats_password:
    network_connectivity_database_password:
    network_policy_ca:
      ca:
      certificate:
      private_key:
    network_policy_client:
      ca: (( grab development-bosh.cf-development.network_policy_ca.certificate ))
      certificate:
      private_key:
    network_policy_database_password:
    network_policy_server:
      ca: (( grab development-bosh.cf-development.network_policy_ca.certificate ))
      certificate:
      private_key:
    newrelic-license-key:
    resource_directory_key:
    router_ca:
      ca:
      certificate:
      private_key:
    router_route_services_secret:
    router_ssl:
      ca: (( grab development-bosh.cf-development.router_ca.certificate ))
      certificate:
      private_key:
    router_status_password:
    routing_api_database_password:
    s3-broker-client-secret:
    sandbox-bot-client-secret:
    scheduler_api_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    scheduler_client_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    service_cf_internal_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    silk_ca:
      ca:
      certificate:
      private_key:
    silk_controller:
      ca: (( grab development-bosh.cf-development.silk_ca.ca ))
      certificate:
      private_key:
    silk_daemon:
      ca: (( grab development-bosh.cf-development.silk_ca.ca ))
      certificate:
      private_key:
    system_domain:
    terraform-client-secret:
    tic-proxy-whitelist:
    tic-secret:
    tic-whitelist:
    uaa-client-audit-client-secret:
    uaa-credentials-broker-client-secret:
    uaa-extras-client-secret:
    uaa-saml-active-key-id:
    uaa-saml-keys:
    uaa-saml-providers:
    uaa_admin_client_secret: (( grab tooling-bosh.developmentbosh.uaa_admin_client_secret.password ))
    uaa_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_clients_cc-routing_secret:
    uaa_clients_cc-service-dashboards_secret:
    uaa_clients_cc_service_key_client_secret:
    uaa_clients_cloud_controller_username_lookup_secret:
    uaa_clients_doppler_secret:
    uaa_clients_gorouter_secret:
    uaa_clients_network_policy_secret:
    uaa_clients_routing_api_client_secret:
    uaa_clients_ssh-proxy_secret:
    uaa_clients_tcp_emitter_secret:
    uaa_clients_tcp_router_secret:
    uaa_database_password:
    uaa_jwt_signing_key:
      private_key:
    uaa_login_saml:
      ca: (( grab common.ca_cert.certificate ))
      certificate: nil
      private_key: nil
    uaa_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaaproxy-client-secret:
    user-tester-password:
    development_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.admin_user.username ))
      password: (( grab tooling-bosh.developmentbosh.admin_user.password ))
    development_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.developmentbosh.uaa_ci_client.password ))
  elasticache-broker:
    broker-password:
    auth-token-seed:
    development_cf_user: #should use absolute path in pipeline
      username: (( grab development-bosh.cf-development.broker-deployer.username ))
      password: (( grab development-bosh.cf-development.broker-deployer.password ))
    development_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.admin_user.username ))
      password: (( grab tooling-bosh.developmentbosh.admin_user.password ))
    development_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.developmentbosh.uaa_ci_client.password ))
  domain-broker:
    broker-username:
    broker-password:
  kubernetes:
    consul_encrypt_key:
    consul_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_apiserver_user:
      username:
      password:
    master_agent_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_kubernetes_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    development_kubernetes_broker_user: #should use absolute path in pipeline
      username: (( grab development-bosh.cf-development.kubernetes-broker-user.username ))
      password: (( grab development-bosh.cf-development.kubernetes-broker-user.password ))
    development_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.admin_user.username ))
      password: (( grab tooling-bosh.developmentbosh.admin_user.password ))
    development_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.developmentbosh.uaa_ci_client.password ))
    development_cf_user: #should use absolute path in pipeline
      username: (( grab development-bosh.cf-development.broker-deployer.username ))
      password: (( grab development-bosh.cf-development.broker-deployer.password ))
    development_kubernetes_broker_exporter_user: #should use absolute path in pipeline
      username: (( grab development-bosh.cf-development.kubernetes_broker_exporter_user.username ))
      password: (( grab development-bosh.cf-development.kubernetes_broker_exporter_user.password ))
  logsearch:
    kibana_session_key:
    kibana_uaa_client:
      username:
      password:
    kibana_nats_user:
      username:
      password:
    archiver_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab development-bosh.cf-development.logsearch-firehose-ingestor-client.username ))
      password: (( grab development-bosh.cf-development.logsearch-firehose-ingestor-client.password ))
    ingestor_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab development-bosh.cf-development.logsearch-firehose-ingestor-client.username ))
      password: (( grab development-bosh.cf-development.logsearch-firehose-ingestor-client.password ))
    pagerduty_key:
    development_cf_user: #should use absolute path in pipeline
      username:
      password:
    development_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.admin_user.username ))
      password: (( grab tooling-bosh.developmentbosh.admin_user.password ))
    development_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.developmentbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.developmentbosh.uaa_ci_client.password ))
  logsearch-platform:
    kibana_uaa_client:
      username:
      password:
    kibana_oauth_cookie_secret:
    pagerduty_key:
staging-bosh:
  secrets_secrets_passphrase:
  admin-ui:
    admin-ui_uaa_client: #should use absolute path in manifest
      username: (( grab staging-bosh.cf-staging.admin-ui-client.username ))
      password: (( grab staging-bosh.cf-staging.admin-ui-client.password ))
    admin-ui_cookie_secret:
    admin-ui_nats_user:
      username:
      password:
    staging_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.admin_user.username ))
      password: (( grab tooling-bosh.stagingbosh.admin_user.password ))
  cf-staging:
    adapter_rlp_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    adapter_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    admin-read-only-client-secret:
    admin-ui-client-secret:
    app_domain:
    app_package_directory_key:
    application_ca:
      ca:
      certificate:
      private_key:
    blobstore_admin_users_password:
    blobstore_secure_link_secret:
    blobstore_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    broker-deployer-password:
    buildpack-notifier-client-secret:
    buildpack_directory_key:
    cc_bridge_cc_uploader:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_cc_uploader_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_tps:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bulk_api_password:
    cc_database_password:
    cc_database_username:
    cc_db_encryption_key:
    cc_internal_api_password:
    cc_staging_upload_password:
    cc_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cdn-broker-client-secret:
    cf_admin_password:
    cf_bosh_password:
    cf_mysql_mysql_admin_password:
    cf_mysql_mysql_cluster_health_password:
    cf_mysql_mysql_galera_healthcheck_endpoint_password:
    cf_mysql_mysql_galera_healthcheck_password:
    cf_mysql_proxy_api_password:
    company-name:
    concourse-broker-client-secret:
    consul_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_agent_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_encrypt_key:
    consul_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    dashboard-client-secret:
    diego-dns-servers:
    diego_auctioneer_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_auctioneer_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_active_key_label:
    diego_bbs_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_encryption_keys_passphrase:
    diego_bbs_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_database_password:
    diego_instance_identity_ca:
      ca:
      certificate:
      private_key:
    diego_locket_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_locket_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent_v2:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_ssh_proxy_host_key:
      private_key:
      public_key_fingerprint:
    droplet_directory_key:
    dropsonde_shared_secret:
    environment:
    etcd_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_client:
      ca: nil
    etcd_peer:
      ca: nil
    etcd_peer_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_server:
      ca: nil
    firehose-exporter-client-secret:
    kibana-client-secret:
    kubernetes-client-secret:
    locket_database_password:
    loggregator_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_cc_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_doppler:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_metron:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_rlp:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_statsdinjector:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_syslogdrainbinder:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    logsearch-firehose-ingestor-client-secret:
    nats_password:
    network_connectivity_database_password:
    network_policy_ca:
      ca:
      certificate:
      private_key:
    network_policy_client:
      ca: (( grab staging-bosh.cf-staging.network_policy_ca.certificate ))
      certificate:
      private_key:
    network_policy_database_password:
    network_policy_server:
      ca: (( grab staging-bosh.cf-staging.network_policy_ca.certificate ))
      certificate:
      private_key:
    newrelic-license-key:
    resource_directory_key:
    router_ca:
      ca:
      certificate:
      private_key:
    router_route_services_secret:
    router_ssl:
      ca: (( grab staging-bosh.cf-staging.router_ca.certificate ))
      certificate:
      private_key:
    router_status_password:
    routing_api_database_password:
    s3-broker-client-secret:
    sandbox-bot-client-secret:
    scheduler_api_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    scheduler_client_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    service_cf_internal_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    silk_ca:
      ca:
      certificate:
      private_key:
    silk_controller:
      ca: (( grab staging-bosh.cf-staging.silk_ca.ca ))
      certificate:
      private_key:
    silk_daemon:
      ca: (( grab staging-bosh.cf-staging.silk_ca.ca ))
      certificate:
      private_key:
    system_domain:
    terraform-client-secret:
    tic-proxy-whitelist:
    tic-secret:
    tic-whitelist:
    uaa-client-audit-client-secret:
    uaa-credentials-broker-client-secret:
    uaa-extras-client-secret:
    uaa-saml-active-key-id:
    uaa-saml-keys:
    uaa-saml-providers:
    uaa_admin_client_secret: (( grab tooling-bosh.stagingbosh.uaa_admin_client_secret.password ))
    uaa_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_clients_cc-routing_secret:
    uaa_clients_cc-service-dashboards_secret:
    uaa_clients_cc_service_key_client_secret:
    uaa_clients_cloud_controller_username_lookup_secret:
    uaa_clients_doppler_secret:
    uaa_clients_gorouter_secret:
    uaa_clients_network_policy_secret:
    uaa_clients_routing_api_client_secret:
    uaa_clients_ssh-proxy_secret:
    uaa_clients_tcp_emitter_secret:
    uaa_clients_tcp_router_secret:
    uaa_database_password:
    uaa_jwt_signing_key:
      private_key:
    uaa_login_saml:
      ca: (( grab common.ca_cert.certificate ))
      certificate: nil
      private_key: nil
    uaa_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaaproxy-client-secret:
    user-tester-password:
    staging_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.admin_user.username ))
      password: (( grab tooling-bosh.stagingbosh.admin_user.password ))
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.stagingbosh.uaa_ci_client.password ))
  kubernetes:
    consul_encrypt_key:
    consul_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_apiserver_user:
      username:
      password:
    master_agent_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_kubernetes_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    staging_kubernetes_broker_user: #should use absolute path in pipeline
      username: (( grab staging-bosh.cf-staging.kubernetes-broker-user.username ))
      password: (( grab staging-bosh.cf-staging.kubernetes-broker-user.password ))
    staging_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.admin_user.username ))
      password: (( grab tooling-bosh.stagingbosh.admin_user.password ))
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.stagingbosh.uaa_ci_client.password ))
    staging_cf_user: #should use absolute path in pipeline
      username: (( grab staging-bosh.cf-staging.broker-deployer.username ))
      password: (( grab staging-bosh.cf-staging.broker-deployer.password ))
    staging_kubernetes_broker_exporter_user: #should use absolute path in pipeline
      username: (( grab staging-bosh.cf-staging.kubernetes_broker_exporter_user.username ))
      password: (( grab staging-bosh.cf-staging.kubernetes_broker_exporter_user.password ))
  logsearch:
    kibana_session_key:
    kibana_uaa_client:
      username:
      password:
    kibana_nats_user:
      username:
      password:
    archiver_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab staging-bosh.cf-staging.logsearch-firehose-ingestor-client.username ))
      password: (( grab staging-bosh.cf-staging.logsearch-firehose-ingestor-client.password ))
    ingestor_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab staging-bosh.cf-staging.logsearch-firehose-ingestor-client.username ))
      password: (( grab staging-bosh.cf-staging.logsearch-firehose-ingestor-client.password ))
    pagerduty_key:
    staging_cf_user: #should use absolute path in pipeline
      username:
      password:
    staging_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.admin_user.username ))
      password: (( grab tooling-bosh.stagingbosh.admin_user.password ))
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.stagingbosh.uaa_ci_client.password ))
  logsearch-platform:
    kibana_uaa_client:
      username:
      password:
    kibana_oauth_cookie_secret:
    pagerduty_key:
  shibboleth-staging:
    idp_ssl_certificate:
      ca:
      certificate:
      private_key:
    idp_signing_certificate:
      ca:
      certificate:
      private_key:
    idp_encryption_certificate:
      ca:
      certificate:
      private_key:
    idp_sealer_password:
    staging_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.stagingbosh.uaa_ci_client.password ))
production-bosh:
  secrets_secrets_passphrase:
  admin-ui:
    admin-ui_uaa_client: #should use absolute path in manifest
      username: (( grab production-bosh.cf-production.admin-ui-client.username ))
      password: (( grab production-bosh.cf-production.admin-ui-client.password ))
    admin-ui_cookie_secret:
    admin-ui_nats_user:
      username:
      password:
    production_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.admin_user.username ))
      password: (( grab tooling-bosh.productionbosh.admin_user.password ))
  cf-production:
    adapter_rlp_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    adapter_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    admin-read-only-client-secret:
    admin-ui-client-secret:
    app_domain:
    app_package_directory_key:
    application_ca:
      ca:
      certificate:
      private_key:
    blobstore_admin_users_password:
    blobstore_secure_link_secret:
    blobstore_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    broker-deployer-password:
    buildpack-notifier-client-secret:
    buildpack_directory_key:
    cc_bridge_cc_uploader:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_cc_uploader_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bridge_tps:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cc_bulk_api_password:
    cc_database_password:
    cc_database_username:
    cc_db_encryption_key:
    cc_internal_api_password:
    cc_staging_upload_password:
    cc_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    cdn-broker-client-secret:
    cf_admin_password:
    cf_bosh_password:
    cf_mysql_mysql_admin_password:
    cf_mysql_mysql_cluster_health_password:
    cf_mysql_mysql_galera_healthcheck_endpoint_password:
    cf_mysql_mysql_galera_healthcheck_password:
    cf_mysql_proxy_api_password:
    company-name:
    concourse-broker-client-secret:
    consul_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_agent_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    consul_encrypt_key:
    consul_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    dashboard-client-secret:
    diego-dns-servers:
    diego_auctioneer_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_auctioneer_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_active_key_label:
    diego_bbs_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_bbs_encryption_keys_passphrase:
    diego_bbs_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_database_password:
    diego_instance_identity_ca:
      ca:
      certificate:
      private_key:
    diego_locket_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_locket_server:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_agent_v2:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_rep_client:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    diego_ssh_proxy_host_key:
      private_key:
      public_key_fingerprint:
    droplet_directory_key:
    dropsonde_shared_secret:
    environment:
    etcd_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_client:
      ca: nil
    etcd_peer:
      ca: nil
    etcd_peer_ca:
      ca: nil
      certificate: nil
      private_key:
    etcd_server:
      ca: nil
    firehose-exporter-client-secret:
    kibana-client-secret:
    kubernetes-client-secret:
    locket_database_password:
    loggregator_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_cc_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_doppler:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_metron:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_rlp:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_statsdinjector:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_syslogdrainbinder:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    loggregator_tls_tc:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    logsearch-firehose-ingestor-client-secret:
    nats_password:
    network_connectivity_database_password:
    network_policy_ca:
      ca:
      certificate:
      private_key:
    network_policy_client:
      ca: (( grab production-bosh.cf-production.network_policy_ca.certificate ))
      certificate:
      private_key:
    network_policy_database_password:
    network_policy_server:
      ca: (( grab production-bosh.cf-production.network_policy_ca.certificate ))
      certificate:
      private_key:
    newrelic-license-key:
    resource_directory_key:
    router_ca:
      ca:
      certificate:
      private_key:
    router_route_services_secret:
    router_ssl:
      ca: (( grab production-bosh.cf-production.router_ca.certificate ))
      certificate:
      private_key:
    router_status_password:
    routing_api_database_password:
    s3-broker-client-secret:
    sandbox-bot-client-secret:
    scheduler_api_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    scheduler_client_tls:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    service_cf_internal_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    silk_ca:
      ca:
      certificate:
      private_key:
    silk_controller:
      ca: (( grab production-bosh.cf-production.silk_ca.ca ))
      certificate:
      private_key:
    silk_daemon:
      ca: (( grab production-bosh.cf-production.silk_ca.ca ))
      certificate:
      private_key:
    system_domain:
    terraform-client-secret:
    tic-proxy-whitelist:
    tic-secret:
    tic-whitelist:
    uaa-client-audit-client-secret:
    uaa-credentials-broker-client-secret:
    uaa-extras-client-secret:
    uaa-saml-active-key-id:
    uaa-saml-keys:
    uaa-saml-providers:
    uaa_admin_client_secret: (( grab tooling-bosh.productionbosh.uaa_admin_client_secret.password ))
    uaa_ca:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaa_clients_cc-routing_secret:
    uaa_clients_cc-service-dashboards_secret:
    uaa_clients_cc_service_key_client_secret:
    uaa_clients_cloud_controller_username_lookup_secret:
    uaa_clients_doppler_secret:
    uaa_clients_gorouter_secret:
    uaa_clients_network_policy_secret:
    uaa_clients_routing_api_client_secret:
    uaa_clients_ssh-proxy_secret:
    uaa_clients_tcp_emitter_secret:
    uaa_clients_tcp_router_secret:
    uaa_database_password:
    uaa_jwt_signing_key:
      private_key:
    uaa_login_saml:
      ca: (( grab common.ca_cert.certificate ))
      certificate: nil
      private_key: nil
    uaa_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    uaaproxy-client-secret:
    user-tester-password:
    production_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.admin_user.username ))
      password: (( grab tooling-bosh.productionbosh.admin_user.password ))
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.productionbosh.uaa_ci_client.password ))
  kubernetes:
    consul_encrypt_key:
    consul_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_apiserver_user:
      username:
      password:
    master_agent_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    master_kubernetes_ssl:
      ca: (( grab common.ca_cert.certificate ))
      certificate:
      private_key:
    production_kubernetes_broker_user: #should use absolute path in pipeline
      username: (( grab production-bosh.cf-production.kubernetes-broker-user.username ))
      password: (( grab production-bosh.cf-production.kubernetes-broker-user.password ))
    staging_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.stagingbosh.admin_user.username ))
      password: (( grab tooling-bosh.stagingbosh.admin_user.password ))
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.productionbosh.uaa_ci_client.password ))
    production_cf_user: #should use absolute path in pipeline
      username: (( grab production-bosh.cf-production.broker-deployer.username ))
      password: (( grab production-bosh.cf-production.broker-deployer.password ))
    production_kubernetes_broker_exporter_user: #should use absolute path in pipeline
      username: (( grab production-bosh.cf-production.kubernetes_broker_exporter_user.username ))
      password: (( grab production-bosh.cf-production.kubernetes_broker_exporter_user.password ))
  logsearch:
    kibana_session_key:
    kibana_uaa_client:
      username:
      password:
    kibana_nats_user:
      username:
      password:
    archiver_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab production-bosh.cf-production.logsearch-firehose-ingestor-client.username ))
      password: (( grab production-bosh.cf-production.logsearch-firehose-ingestor-client.password ))
    ingestor_uaa_firehost_ingestor_client: #should use absolute path in manifest
      username: (( grab production-bosh.cf-production.logsearch-firehose-ingestor-client.username ))
      password: (( grab production-bosh.cf-production.logsearch-firehose-ingestor-client.password ))
    pagerduty_key:
    production_cf_user: #should use absolute path in pipeline
      username:
      password:
    production_bosh_user: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.admin_user.username ))
      password: (( grab tooling-bosh.productionbosh.admin_user.password ))
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.productionbosh.uaa_ci_client.password ))
  logsearch-platform:
    kibana_uaa_client:
      username:
      password:
    kibana_oauth_cookie_secret:
    pagerduty_key:
  shibboleth-production:
    idp_ssl_certificate:
      ca:
      certificate:
      private_key:
    idp_signing_certificate:
      ca:
      certificate:
      private_key:
    idp_encryption_certificate:
      ca:
      certificate:
      private_key:
    idp_sealer_password:
    production_bosh_client: #should use absolute path in pipeline
      username: (( grab tooling-bosh.productionbosh.uaa_ci_client.username ))
      password: (( grab tooling-bosh.productionbosh.uaa_ci_client.password ))
